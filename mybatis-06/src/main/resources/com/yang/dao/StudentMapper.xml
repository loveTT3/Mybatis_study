<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.dao.StudentMapper">

    <!-- 思路： 1. 查出所有学生 2.根据学生的tid查找老师  子查询   -->

    <!--处理方式一-->
    <select id="getStudent" resultMap="StudentTeacher">
--         select s.id,s.name,t.name from mybatis.teacher t , mybatis.student s where s.tid = t.id
    select * from mybatis.student

    </select>

    <resultMap id="StudentTeacher" type="Student">
        <!--     实体类字段      数据库字段   -->
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <!--复杂的属性 我们需要但需处理  对象：association  集合collection-->
        <association property="teacher" column="tid" javaType="Teacher" select="getTeacher"/>
    </resultMap>

    <select id="getTeacher" resultType="Teacher">
        select * from mybatis.teacher where id = #{id}
    </select>


    <!--处理方式二   按照结果嵌套处理  -->
    <select id="getStudent2" resultMap="StudentTeacher2">
        select s.id sid,s.name sname,t.name tname,t.id
        from mybatis.teacher t , mybatis.student s
        where s.tid = t.id
    </select>

    <resultMap id="StudentTeacher2" type="Student">
        <result property="id" column="sid"/>
        <result property="name" column="sname"/>
        <association property="teacher" javaType="Teacher">
            <result property="id" column="id"/>
            <result property="name" column="tname"/>
        </association>
    </resultMap>

</mapper>